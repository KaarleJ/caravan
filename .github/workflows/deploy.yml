name: Build and Deploy Quarkus Native Image to AWS Lambda

on:
  push:
    branches:
      - master

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    env:
      ECR_REGISTRY: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
      ECR_REPOSITORY: ${{ secrets.AWS_ECR_REPOSITORY }}
      IMAGE_TAG: latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('caravan-server/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "21"

      - name: Build Quarkus native profile
        run: |
          cd caravan-server
          mvn clean package -Pnative -Dquarkus.native.container-build=true

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_ACCESS_KEY_SECRET }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        run: |
          docker build -f caravan-server/src/main/docker/Dockerfile.native-micro -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG caravan-server
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT
        
        # Our AWS configuration automatically pulls the image from the ECR repository and deploys it to AWS AppRunner
